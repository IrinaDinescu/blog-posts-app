I.
    1) The big challenge is microservices is data.
    2) Diffrent ways to share data netween services. We are going to foucs on async communication.
    3) Async communication focuses on communicating changes using events sent to and event bus.
    4) Async communication ecnourages each service to be 100% self-sufficient.
        Relatively easy to handle temporary downtime or new service creation.
    5) Docker makes it easier to package up services.
    6) Kuberetes is a pain to setup, but makes it really easy to deploy + scale services.


#Painful Things from App #1
    1) Lots of duplicated code!
    2) Really hard to picture the flow of events between services +
    3) Really hard to remember what properties an event should have
    4) Really hard to test some event flows.
    5) My machine is getting laggy running kubernetes and everything else...
    6) What if someone created a comment after editing 5 others after editing a post
        while balancing on a thight rope...


# Solutions!
    1) -> Build a central library as an NPM module to share code between
            our diffrent projects.
    2) -> Precisely define all of our events in this shared library.
    3) -> Write everything in Typescript.
    4) -> Write tests for as much as possible/reasonable.
    5) -> Run a k8s cluster in the cloud and develop on it almost as quicly as local.
    6) Introduce a lot of code to handleconcurrency issues.
